<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PHP on hackfox</title>
    <link>https://xsoer.github.io/tags/php/</link>
    <description>Recent content in PHP on hackfox</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 02 Mar 2018 11:53:29 +0000</lastBuildDate>
    
	<atom:link href="https://xsoer.github.io/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PHP知识体系</title>
      <link>https://xsoer.github.io/posts/2018/03-02-php%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/</link>
      <pubDate>Fri, 02 Mar 2018 11:53:29 +0000</pubDate>
      
      <guid>https://xsoer.github.io/posts/2018/03-02-php%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/</guid>
      <description>0x00、关键字   $ 、echo、 print、null、global、GLOBALS[&amp;lsquo;y&amp;rsquo;]、static、function、public、private、protected 对象(class)：String、Integer、Float、Boolean、Object、NULL、Resource、Closure() 函数(function)：  通用：die()、var_dump()、for()、foreach()、define()、echo 函数：function_exists() 数组：array()、sort()、count()、 implode($arr,&amp;lsquo;,&amp;rsquo;)、is_array()、unset()、 字符串：strlen()、mb_substr()、strpos()、str_replace()、str_word_count()、sprintf()、explode(&amp;lsquo;,&amp;rsquo;,$string)、substr()、iconv_substr 数据库：query()、mysql()、close()、 文件：file_exist()、is_file()、is_dir() 对象： serialize()、unserialize() 回话：session_start()、setcookie()、session_destroy()、session_unset()、 日期：date()、strtotime()、date_default_timezone_set() socket：  超级全局变量:  $GLOBALS $_SERVER $_REQUEST $_POST $_GET $_FILES $_ENV $_COOKIE $_SESSION  魔术方法：  contract()、decontract、get()、set()、 _invoke()    0x01、字符串  //字符串定义方式 // &#39;&#39;只转译 &#39; / 但是“”转译的比较多 // &amp;quot;&amp;quot;可以解析变量 // &#39;&#39;速度比较快，不用分析变量，转译内用少。我们优先使用 &#39;&#39; $str1 = &#39;hello&#39;; $str2 = &amp;quot;hello&amp;quot;; //写大段文本 //heredoc &amp;lt;&amp;lt;&amp;lt;HTML ......HTML; //类似于&amp;quot;&amp;quot; 可以解析文本中的变量 //nowdoc &amp;lt;&amp;lt;&amp;lt;&#39;HTML&#39;......HTML; //字符串函数 /* 字符长度计算 查找字符位置 字符替换 提取字符 分割连接反转字符 去除增加空格 HTML代码/数据库安全处理字符 比较字符 字符大小写转换 */ number_format(&#39;123456789&#39;);//123,456,789 使用科学计数法表示字符串 str_repeat(&#39; &#39;, 10); //重复空格10次 //计算字符串长度 $t1 = &#39;abcdefghijklmn abcdefg&#39;; $t2 = &#39;我是中国人&#39;; echo strlen($t1),&#39;&amp;lt;br /&amp;gt;&#39;; //22 //计算字符长度 echo mb_strlen($t2,&#39;utf-8&#39;), &#39;&amp;lt;br /&amp;gt;&#39;; //utf-8 必须加 &#39;&#39; //5 //计算字节长度 //反转字符 echo strrev($t1).&#39;&amp;lt;br /&amp;gt;&#39;;//gfedcba nmlkjihgfedcba 反转字符 //reverse 背面，反面 反转 同数组反转array_reverse 字符串是strrve //查找自字符串的位置 $t1 = &#39;abcdefghijklmn abcd.efg&#39;; $t3 = &#39;d&#39;; $t4 = &#39;bc&#39;; echo strpos($t1, $t3), &#39;&amp;lt;br /&amp;gt;&#39;; //区分大小写，查找第一次出现的位置//返回值为int echo stripos($t1, &#39;c&#39;), &#39;&amp;lt;br /&amp;gt;&#39;; //不区分大小写，返回字符串在另一个字符串出现的位置 echo strrpos($t1, &#39;.</description>
    </item>
    
    <item>
      <title>PHP数组函数</title>
      <link>https://xsoer.github.io/posts/2015/07-05-php%E6%95%B0%E7%BB%84%E5%87%BD%E6%95%B0/</link>
      <pubDate>Sun, 05 Jul 2015 01:53:37 +0000</pubDate>
      
      <guid>https://xsoer.github.io/posts/2015/07-05-php%E6%95%B0%E7%BB%84%E5%87%BD%E6%95%B0/</guid>
      <description>  0x00、函数   1.array() [] //生成数组 2.isset($arr[$i])//判断该值是否存在 3.is_array($arr) //判断是否是数组、 4.array_push($arr,$a) //从尾部往数组内添加值 5.array_unshift //从头部往数组内插入 6.array_pop //弹出数组最后一个 7.array_shift //弹出数组第一个 8.range(0,6) //产生一个从0到6的数组 9.in_array($a,$arr) //检验是否在数组内 10.array_keys() //返回数组的所有键值 11.array_change_key_case($arr1,CASE_UPPER) //改变键值为大写 或者CASE_LOWER 小写 12.array_merge() //合并两个或多个数组 13.sort($arr) //给数组排序，升序 14.count() //查询数组内元素的个数 15.array_filter($arr,$fun) //用一个函数过滤数组 16.print_r() //输出数组 17.foreach($arr as $k) //遍历数组 18.while(list($key,$value)==each($arr)) //list遍历数组 19.explode(&amp;lsquo;,&amp;rsquo;,$arr) //去除字符串中的逗号，转为数组 20.implode(&amp;lsquo;,&amp;rsquo;,$arr) //将数组转为字符串 21.ksort() //按键排序 22.asort() //按值排序 23.rsort($arr) //降序排序  </description>
    </item>
    
    <item>
      <title>PHP字符串操作</title>
      <link>https://xsoer.github.io/posts/2015/06-12-php%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Fri, 12 Jun 2015 13:24:35 +0000</pubDate>
      
      <guid>https://xsoer.github.io/posts/2015/06-12-php%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/</guid>
      <description>  0x00、字符串操作   1.print 有返回值、只能输出一个、可以用在表达式中
 echo 无返回值、能输出多个、不能用于表达式中  2.trim($strs) //去除两边的空格
 rtrim($strs) //去除右边的空格 ltrim($strs) //去除左边的空格  3.点链接字符串(.)
 4.strlen($strs) //求字符串长度
 5.explode(&amp;lsquo;,&amp;rsquo;,$strs) //分割字符串为数组
 6.implode(&amp;lsquo;,&amp;rsquo;,$arr) //分割数组为字符串
 7.strtoupper($strs),strtolower($strs) //转换字符串大小写
 8.!=、== //比较两个对象是否相等
 9.!== 、=== //比较两个对象及值是否相等
 10.strcmp($str1,$str2) //区分大小写比较字符串，前者大于后者返回大于零的数，小于返回小于零的数，相等则返回零
 11.strcasecmp($str1,$str2) //不区分大小写比较字符串
 12.strncmp($str1,$str2,n) //区分大小写比较前n个字符串
 13.strncasecmp($str1,$str2,n) //不区分大小写比较前n个字符串
 14.str_replace($oldstr,$newstr,$strs) //区分大小写替换字符串内的字符
 15.strstr($strs,$findstr) //字符串查找
 16.htmlspecialchars($str) //将字符串内特殊的字符转换为html内的字符
 17.md5($str) //md5加密
 18.strrev($str) //反转字符串
  </description>
    </item>
    
  </channel>
</rss>