<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JS on hackfox</title>
    <link>http://hackfox.vip/tags/js/</link>
    <description>Recent content in JS on hackfox</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 01 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://hackfox.vip/tags/js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ES6标准预览</title>
      <link>http://hackfox.vip/post/171001-es6%E6%A0%87%E5%87%86%E6%A6%82%E8%A7%88/</link>
      <pubDate>Sun, 01 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://hackfox.vip/post/171001-es6%E6%A0%87%E5%87%86%E6%A6%82%E8%A7%88/</guid>
      <description>一、变量  新增两个关键字：let、const
  let与var的区别
 作用域不同() 变量是否可以提升不  contst：只读不可改，声明即赋值 其所声明的对象的属性是可以改变的。
  二、箭头函数 三、字符串  模版字符串(``) 新增几个方法  &#39;my string&#39;.startsWith(&#39;my&#39;); //true &#39;my string&#39;.endsWith(&#39;my&#39;); // false &#39;my string&#39;.includes(&#39;str&#39;); // true &#39;my &#39;.repeat(3); // &#39;my my my &#39;  四、数组  Array 对象增加了一些新的静态方法，Array 原型上也增加了一些新方法
  from 从类数组和可遍历对象中创建 Array 的实例 find 返回回调返回 true 的第一个元素。  [9, 2, 10, 8].find(n =&amp;gt; n === 10) // 10   findIndex 返回回调函数返回 true的第一个元素的下标。  [5, 1, 10, 8].</description>
    </item>
    
    <item>
      <title>JS字符串转换为数字</title>
      <link>http://hackfox.vip/post/150702-js%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B0%E5%AD%97/</link>
      <pubDate>Thu, 02 Jul 2015 04:05:40 +0000</pubDate>
      
      <guid>http://hackfox.vip/post/150702-js%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B0%E5%AD%97/</guid>
      <description>  字符串在做运算时，一定要转换为数字后在做运算，否则会出现各种奇葩现象。
 转换的函数：  1.js提供了parseInt()和parseFloat()两个转换函数。前者把值转换成整数，后者把值转换成浮点数。只有对String类型调用这些方法，这两个函数才能正确运行；对其他类型返回的都是NaN(Not a Number)。
 2.还可使用强制类型转换（type casting）处理转换值的类型。使用强制类型转换可以访问特定的值，即使它是另一种类型的。
 ECMAScript中可用的3种强制类型转换如下： Boolean(value)——把给定的值转换成Boolean型； Number(value)——把给定的值转换成数字（可以是整数或浮点数）； String(value)——把给定的值转换成字符串。 用这三个函数之一转换值，将创建一个新值，存放由原始值直接转换成的值。这会造成意想不到的后果。 当要转换的值是至少有一个字符的字符串、非0数字或对象时，Boolean()函数将返回true。如果该值是空字符串、数字0、undefined或null，它将返回false。  3.利用js变量弱类型转换。例：
  &amp;lt;script&amp;gt; var str= &#39;234.56 &#39;; var x = str-0; x = x*10; &amp;lt;/script&amp;gt;  </description>
    </item>
    
  </channel>
</rss>